AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Order Service API written with SpringBoot with the aws-serverless-java-container library

Mappings:
  EnvVariables:
    test:
      CORS:
        - https://s3.amazonaws.com
    prod:
      CORS:
        - https://www.cedarmeadowmeats.com

Parameters:
  AppName:
    Description: Name of Application
    Type: String
    Default: order-service
  Environment:
    Type: String
    Default: test
    Description: (Required) Enter test, prod. Default is test.
    AllowedValues:
      - test
      - prod

Globals:
  Api:
    # API Gateway regional endpoints
    EndpointConfiguration: REGIONAL

Resources:
  HttpApi:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: !Sub '${AppName}-${Environment}'
      Description: !Sub '${AppName}-${Environment}'
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins: !FindInMap [EnvVariables, !Ref Environment, CORS]
        AllowMethods:
          - GET
          - HEAD
          - OPTIONS
          - POST
        AllowHeaders:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
          - X-Amz-User-Agent
      Target: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${OrderServiceFunction}/invocations
      Tags:
        org: cedarmeadowmeats
        env: !Ref Environment

  OrderServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AppName}-${Environment}'
      Handler: com.cedarmeadowmeats.orderservice.StreamLambdaHandler::handleRequest
      Runtime: java21
#      SnapStart:
#        ApplyOn: PublishedVersions
      CodeUri: .
      MemorySize: 2048
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Sub 'OrderTable-${Environment}'
      Timeout: 60
      Environment:
        Variables:
          org: cedarmeadowmeats
          eng: !Ref Environment
          SPRING_PROFILES_ACTIVE: !Ref Environment
          JAVA_TOOL_OPTIONS: !Sub '-Dspring.profiles.active=${Environment}'
          MAIN_CLASS: com.cedarmeadowmeats.orderservice.OrderServiceApplication
          TABLE_NAME: !Sub 'OrderTable-${Environment}'
      Tags:
        org: cedarmeadowmeats
        env: !Ref Environment
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            TimeoutInMillis: 20000
            PayloadFormatVersion: '1.0'

  # Function permissions grant an AWS service or another account permission to use a function
  FunctionResourcePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      FunctionName: !Ref OrderServiceFunction
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*'

Outputs:
  HttpApiEndpoint:
    Description: The default endpoint for the HTTP API.
    Value: !GetAtt HttpApi.ApiEndpoint